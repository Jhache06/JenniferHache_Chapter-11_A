Technical Design Document Template

Name: Jennifer Hache

Date Created: Nov 9, 2024

Program Description: deck of 52 cards is shuffled and a Poker hand of 5 cards is dealt. It uses the Deck class to manage the deck of cards, and the game asks the player to replace specific cards in their hand.

Functions used in the Program (list in order as they are called):
1. Function Name: __init__(self, size)
Description: Size of deck. creates a list of card indices from 0 -1. Then shuffles the deck and sets the current card to 0. 
Parameters: size (integer): The number of cards in the deck
Variables:
1.	self.card_list: A list of integers representing card indices (from 0 - 1). This list is shuffled to randomize the order of cards.
2.	self.current_card: An integer that tracks the index of the next card to be dealt. It is initially set to 0 due to it being the first card of the deck.
3.	self.size: The total number of cards in the deck.
Logical Steps: 
1.	Initializes self.card_list as a list of integers from 0 to 1
2.	Shuffles self.card_list using random.shuffle().
3.	Sets self.current_card to 0 to track the index of the next card
4.	Sets self.size to the provided size 
Returns: none

Functions used in the Program (list in order as they are called):
2. Function Name: def deal(self)
Description: Deals one card from the deck. returns the next card from the deck. If all cards have been dealt, it reshuffles the deck and starts from the beginning. The card is returned as an integer and the current_card increments.
Parameters: none, just uses instance variables.
Variables: 
1.	self.card_list: Holds the list of cards in the deck.
2.	self.current_card: Tracks the index of the next card to be dealt from the deck.
Logical Steps: 
1.	Checks if there are no more cards left in the deck to be dealt 
2.	If true, reshuffles the deck (random.shuffle(self.card_list)) and resets self.current_card to 0.
3.	Increments self.current_card by 1, moving to the next card.
4.	Returns the card at index self.current_card - 1 from self.card_list.
Returns: integer value (next card in the deck)

3. Function Name: input()
Description: user/player can enter which cards they want reshuffled.
Parameters: none
Variables: 
1.	cards_to_replace: The input(string) from the user- card numbers to be replaced.
Logical Steps: 
1.	Ask user/player to enter the card numbers (1 to 5) that they want to replace.
2.	The input is then split by commas and converted into a list of integers, which represent the indices of the cards the user/player wants to replace.
Returns: A string. Ex: "1, 3, 5",  generate a list of integers [0, 2, 4] (for replacing the first, third, and fifth cards).

4. Function Name: split(',') and int()
Description: process user input.
Parameters: none
Variables:
1.	cards_to_replace: The user input (string) that needs to be split and converted to integers.
Logical Steps: 
1.	The split(',') method splits the user's input string by commas into a list of substrings 
2.	The int() method converts each substring into an integer, creating a list of integers.
3.	The integers are then adjusted for 0-based indexing (subtracting 1 from each number).
Returns: list of integers representing the 0-based indices of the cards to be replaced

5. Function Name: for loop
Description: Initial hand dealing
Parameters: none
Variables: 
1.	d: The card dealt (integer value-card index).
2.	r: The rank of the card (calculated using d % 13).
3.	s: The suit of the card (calculated using d // 13).
4.	initial_hand: A list that stores the cards dealt to the player (as a tuple).
Logical Steps: 
1.	A loop (for i in range(5)) runs 5 times, dealing 5 cards to the player's hand.
2.	For each card:
a.	The deal() method is called to get a card from the deck.
b.	The card number is processed to determine the rank and suit:
c.	r = d % 13 gives the rank (0-12).
d.	s = d // 13 gives the suit (0-3).
Returns: 5 cards are printed 
as part of the initial hand. Each card displays the rank and suit.


6. Function Name: for loop (replacing cards)
Description: replacement of cards
Parameters: cards_to_replace (list of integers): The indices of the cards the user wants to replace.
Variables: 
1.	cards_to_replace: A list of integers representing the indices of the cards the user wants to replace.
2.	new_card: The new card dealt from the deck to replace an old card.
3.	r: The rank of the new card.
4.	s: The suit of the new card.
Logical Steps: 
1.	For card index in cards_to_replace, the deal() method is called to draw a new card from the deck.
2.	The new card is processed to determine its rank and suit.
3.	The new card replaces the old card at the specified index in the initial_hand list.
Returns: initial_hand (list) is updated.

7 . Function Name: print( ) â€“ last one 
Description: prints the users/players list of cards
Parameters: initial_hand (tuples):
 A list containing the final hand of cards after the replacements. Each card is represented as rank and suit.
Variables: 
1.	initial_hand: A list of tuples- the rank and suit of a card.
2.	card: Each card in initial_hand during iteration.
3.	ranks: A list containing the rank names 
4.	suits: A list containing the suit names 
Logical Steps: 
1.	the program prints the final hand by iterating over the initial_hand list (updated).
2.	It prints the rank and suit using the ranks and suits lists.
Returns: A final hand is printed with the updated cards, showing their rank and suit.

Link to repository: https://github.com/Jhache06/JenniferHache_Chapter-11_A.git






{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 TimesNewRomanPSMT;\f2\fswiss\fcharset0 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww31800\viewh18000\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
Technical Design Document Template\
\uc0\u8232 Name: Jennifer Hache\
\uc0\u8232 Date Created: Nov 9, 2024\
\uc0\u8232 Program Description: deck of 52 cards is shuffled and a Poker hand of 5 cards is dealt. It uses the Deck class to manage the deck of cards, and the game asks the player to replace specific cards in their hand.\
\uc0\u8232 Functions used in the Program (list in order as they are called):\u8232 1. Function Name: __init__(self, size)\u8232 Description: Size of deck. creates a list of card indices from 0 -1. Then shuffles the deck and sets the current card to 0. \u8232 Parameters: size (integer): The number of cards in the deck\u8232 Variables:\
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 self.card_list: A list of integers representing card indices (from 0 - 1). This list is shuffled to randomize the order of cards.\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 self.current_card: An integer that tracks the index of the next card to be dealt. It is initially set to 0 due to it being the first card of the deck.\
3.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 self.size: The total number of cards in the deck.\
\pard\pardeftab720\li480\partightenfactor0
\cf2 Logical Steps: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 Initializes self.card_list as a list of integers from 0 to 1\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 Shuffles self.card_list using random.shuffle().\
3.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 Sets self.current_card to 0 to track the index of the next card\
4.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 Sets self.size to the provided size \
\pard\pardeftab720\partightenfactor0
\cf2 Returns: none\
\'a0\
Functions used in the Program (list in order as they are called):\uc0\u8232 2. Function Name: def 
\f2\b deal(self)
\f0\b0 \uc0\u8232 Description: Deals one card from the deck. returns the next card from the deck. If all cards have been dealt, it reshuffles the deck and starts from the beginning. The card is returned as an integer and the current_card increments.\u8232 Parameters: none, just uses instance variables.\u8232 Variables: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 self.card_list: Holds the list of cards in the deck.\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 self.current_card: Tracks the index of the next card to be dealt from the deck.\
\pard\pardeftab720\partightenfactor0
\cf2 Logical Steps: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 Checks if there are no more cards left in the deck to be dealt \
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 If true, reshuffles the deck (random.shuffle(self.card_list)) and resets self.current_card to 0.\
3.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 Increments self.current_card by 1, moving to the next card.\
4.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 Returns the card at index self.current_card - 1 from self.card_list.\
\pard\pardeftab720\partightenfactor0
\cf2 Returns: integer value (next card in the deck)\
\uc0\u8232 3. Function Name: input()\u8232 Description: user/player can enter which cards they want reshuffled.\u8232 Parameters: none\u8232 Variables: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 cards_to_replace: The input(string) from the user- card numbers to be replaced.\
\pard\pardeftab720\partightenfactor0
\cf2 Logical Steps: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 Ask user/player to enter the card numbers (1 to 5) that they want to replace.\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 The input is then split by commas and converted into a list of integers, which represent the indices of the cards the user/player wants to replace.\
\pard\pardeftab720\partightenfactor0
\cf2 Returns: A string. Ex: "1, 3, 5", \'a0generate a list of integers [0, 2, 4] (for replacing the first, third, and fifth cards).\
\'a0\
4. Function Name: split(',') and int()\uc0\u8232 Description: process user input.\u8232 Parameters: none\u8232 Variables:\
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 cards_to_replace: The user input (string) that needs to be split and converted to integers.\
\pard\pardeftab720\partightenfactor0
\cf2 Logical Steps: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 The split(',') method splits the user's input string by commas into a list of substrings \
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 The int() method converts each substring into an integer, creating a list of integers.\
3.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 The integers are then adjusted for 0-based indexing (subtracting 1 from each number).\
\pard\pardeftab720\partightenfactor0
\cf2 Returns: list of integers representing the 0-based indices of the cards to be replaced\
\'a0\
5. Function Name: for loop\uc0\u8232 Description: Initial hand dealing\u8232 Parameters: none\u8232 Variables: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 d: The card dealt (integer value-card index).\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 r: The rank of the card (calculated using d % 13).\
3.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 s: The suit of the card (calculated using d // 13).\
4.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 initial_hand: A list that stores the cards dealt to the player (as a tuple).\
\pard\pardeftab720\partightenfactor0
\cf2 Logical Steps: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 A loop (for i in range(5)) runs 5 times, dealing 5 cards to the player's hand.\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 For each card:\
\pard\pardeftab720\li1920\fi-480\partightenfactor0
\cf2 a.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 The deal() method is called to get a card from the deck.\
b.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 The card number is processed to determine the rank and suit:\
c.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 r = d % 13 gives the rank (0-12).\
d.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 s = d // 13 gives the suit (0-3).\
\pard\pardeftab720\partightenfactor0
\cf2 Returns: 5 cards are printed \
\pard\pardeftab720\fi960\partightenfactor0
\cf2 as part of the initial hand. Each card displays the rank and suit.\
\pard\pardeftab720\partightenfactor0
\cf2 \'a0\
\'a0\
6. Function Name: for loop (replacing cards)\uc0\u8232 Description: replacement of cards\u8232 Parameters: cards_to_replace (list of integers): The indices of the cards the user wants to replace.\u8232 Variables: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 cards_to_replace: A list of integers representing the indices of the cards the user wants to replace.\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 new_card: The new card dealt from the deck to replace an old card.\
3.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 r: The rank of the new card.\
4.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 s: The suit of the new card.\
\pard\pardeftab720\partightenfactor0
\cf2 Logical Steps: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 For card index in cards_to_replace, the deal() method is called to draw a new card from the deck.\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 The new card is processed to determine its rank and suit.\
3.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 The new card replaces the old card at the specified index in the initial_hand list.\
\pard\pardeftab720\partightenfactor0
\cf2 Returns: initial_hand (list) is updated.\
\'a0\
7 . Function Name: print( ) \'96 last one \uc0\u8232 Description: prints the users/players list of cards\u8232 Parameters: initial_hand (tuples):\
\'a0A list containing the final hand of cards after the replacements. Each card is represented as rank and suit.\uc0\u8232 Variables: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 initial_hand: A list of tuples- the rank and suit of a card.\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 card: Each card in initial_hand during iteration.\
3.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 ranks: A list containing the rank names \
4.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 suits: A list containing the suit names \
\pard\pardeftab720\partightenfactor0
\cf2 Logical Steps: \
\pard\pardeftab720\li960\fi-480\partightenfactor0
\cf2 1.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 the program prints the final hand by iterating over the initial_hand list (updated).\
2.
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\fs32 It prints the rank and suit using the ranks and suits lists.\
\pard\pardeftab720\partightenfactor0
\cf2 Returns: A final hand is printed with the updated cards, showing their rank and suit.\
\'a0\
Link to repository: https://github.com/Jhache06/JenniferHache_Chapter-11_A.git\
\'a0\
\'a0\
\'a0\
\'a0\
\'a0\
}